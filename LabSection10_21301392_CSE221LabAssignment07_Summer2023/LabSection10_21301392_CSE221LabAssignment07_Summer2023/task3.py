# -*- coding: utf-8 -*-
"""task3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A3cyEeW7qoDfhgn-asatytx0tJnm2tWU
"""

#task3
inp = open("/content/input3.txt","r")
out = open("/content/output3.txt","w")

n, k = map(int, inp.readline().split())

frnd_circles = [i for i in range(n)]
sizes = [1] * n


def find_root(frnd_circles, i):
    if frnd_circles[i] == i:
        return i
    frnd_circles[i] = find_root(frnd_circles, frnd_circles[i])
    return frnd_circles[i]

def union(frnd_circles, sizes, i, j):
    root_i = find_root(frnd_circles, i)
    root_j = find_root(frnd_circles, j)
    if root_i != root_j:
        frnd_circles[root_i] = root_j
        sizes[root_j] += sizes[root_i]


for i in range(k):
    a, b = map(int, inp.readline().split())
    union(frnd_circles, sizes, a-1, b-1)
    out.write(str(sizes[find_root(frnd_circles, a-1)]) + '\n')